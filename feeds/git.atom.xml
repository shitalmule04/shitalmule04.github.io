<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Shital Mule's Blog - git</title><link href="http://shitalmule04.github.io/" rel="alternate"></link><link href="http://shitalmule04.github.io/feeds/git.atom.xml" rel="self"></link><id>http://shitalmule04.github.io/</id><updated>2017-10-10T00:00:00+05:30</updated><entry><title>File Status Lifecycle in Git</title><link href="http://shitalmule04.github.io/file-status-lifecycle-in-git.html" rel="alternate"></link><published>2017-10-10T00:00:00+05:30</published><updated>2017-10-10T00:00:00+05:30</updated><author><name>Shital Mule</name></author><id>tag:shitalmule04.github.io,2017-10-10:/file-status-lifecycle-in-git.html</id><summary type="html"></summary><content type="html">&lt;h3&gt;File has four states in Status lifecycle. that are&lt;/h3&gt;
&lt;h5&gt;Untracked&lt;/h5&gt;
&lt;h5&gt;Unmodified&lt;/h5&gt;
&lt;h5&gt;Modified&lt;/h5&gt;
&lt;h5&gt;Staged&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Untracked state :&lt;/strong&gt; Files are present in the local directory, but not added in the github repository index.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Unmodified state :&lt;/strong&gt; Files are already present in directory or added using &lt;em&gt;$git add&lt;/em&gt; command. If some changes did, 
then it not get tracked. Also after commiting the changes file status become unmodified.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Modified state :&lt;/strong&gt; When previously tracked file is edited, but not commit the changes.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Staged state :&lt;/strong&gt; When files committed and ready to push in git repository, then they have staged status.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;File has two states tracked and untracked. Previous snapshot are maintained in tacked file. &lt;/p&gt;
&lt;h3&gt;Lets see example to unserstand above concepts:&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;$ git init&lt;/strong&gt;                                                                                                                                       &lt;br&gt;
&lt;strong&gt;$ git clone https://github.com/shitalmule04/python-learning.git&lt;/strong&gt;                                                                                  &lt;br&gt;
OR                                                                                                                                                   &lt;br&gt;
&lt;strong&gt;$ git clone  https://github.com/shitalmule04/python-learning.git examples&lt;/strong&gt;                                                                          &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;git init&lt;/strong&gt; creates Git repository skeleton(.git) which contains all neccesary repository files in the currently working directory.                 &lt;br&gt;
&lt;strong&gt;git clone&lt;/strong&gt; used to copy existing project locate in repository. From above example, project get copied into &lt;em&gt;python-learning&lt;/em&gt; directory,
Whereas in second case existing project will get copy into examples directory.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;$ vi README.md&lt;/strong&gt;                                                                                                                                   &lt;br&gt;
&lt;strong&gt;$ git status&lt;/strong&gt;                                                                                                                                       &lt;/p&gt;
&lt;h2&gt;&lt;img alt="unstage" src="../images/Untracked-and-not-staged1.png"&gt;&lt;/h2&gt;
&lt;p&gt;README.md is previously tracked file, but changes in file does not commited and hence it showing output as &lt;em&gt;Changes not staged for commit&lt;/em&gt;.
So to track the files we need to add file.
There are three way to add file:                                                                                                                     &lt;br&gt;
&lt;strong&gt; $git add filename &lt;/strong&gt;          ==&amp;gt;used to add particular file                                                                              &lt;br&gt;
&lt;strong&gt; $git add  .&lt;/strong&gt;                 ==&amp;gt;use to add all untracked file and modified file                                                          &lt;br&gt;
&lt;strong&gt; $git add /path/to/filename&lt;/strong&gt;  ==&amp;gt;use to add file at particular location                                                                     &lt;/p&gt;
&lt;p&gt;We'll use,&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;"$ git add * "&lt;/strong&gt; and then &lt;strong&gt;"$ git status"&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Then output will be,&lt;/p&gt;
&lt;p&gt;&lt;img alt="Adding" src="../images/GitAdd2.png"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Now files are modified and need to change status into staged.Commit a snapshot of all changes in the working directory. 
This only includes modifications to tracked files
 Three way to commit changes:                                                                                                                        &lt;br&gt;
 1. $git commit -a  -m " your message"                                                                                                               &lt;br&gt;
 2. git commit -m " your Message"                                                                                                                    &lt;br&gt;
 3. gitcommit -v -m "Message"                                                                                                                          &lt;/p&gt;
&lt;p&gt;Lets see one by one,&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;$ git commit -a -m "First Commit"&lt;/strong&gt;
&lt;img alt="commit1" src="../images/GitCommit3.png"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;$ git commit -m "Second Commit"&lt;/strong&gt;
&lt;img alt="commit2" src="../images/GitCommit4.png"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;$ git commit -v -m "Third Commit"&lt;/strong&gt;
&lt;img alt="commit3" src="../images/GitCommit5.png"&gt;&lt;/p&gt;
&lt;p&gt;Commit performed, Now time to push files from staging area to git repository by following commands&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;$ git push&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;To push changes from staging area to git repository&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;$ git push -u origin master&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Branch master set up to track remote branch master from origin.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;$ git pull origin master&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;To make directory locally available &lt;/p&gt;
&lt;p&gt;Thanks.! Please share and comment.&lt;/p&gt;</content><category term="general"></category></entry></feed>